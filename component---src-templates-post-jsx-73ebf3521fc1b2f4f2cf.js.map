{"version":3,"file":"component---src-templates-post-jsx-73ebf3521fc1b2f4f2cf.js","mappings":"gMAuDA,UA9CaA,IAAe,IAAd,KAAEC,GAAMD,EACpB,MAAME,EAAOD,EAAKE,gBACZ,SAAEC,EAAQ,KAAEC,EAAI,WAAEC,GAAeL,GAEjC,MAAEM,EAAK,KAAEC,EAAI,OAAEC,EAAM,KAAEC,EAAI,OAAEC,GAAWT,EAAKU,aAC7C,QAAEC,GAAYX,GACd,YAAEY,EAAW,KAAEC,GAASb,EAAKc,OAEnC,IAAIC,EAAiB,GAiBrB,OAhBe,OAAXN,IACFM,EAAiBX,EAAWY,MAAMC,KAAIC,GAChCA,EAAWC,KAAKC,KAAOpB,EAAKoB,GAC9BC,OAAAC,OAAA,GACKJ,EAAWC,KAAK,CACnBI,aAAa,IAGfF,OAAAC,OAAA,GACKJ,EAAWC,KAAK,CACnBI,aAAa,OAOnBC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACrB,MAAOA,EAAOsB,YAAahB,EAASiB,IAAG,GAAKC,EAAAA,QAAUhB,IAC3DW,EAAAA,cAACM,EAAAA,EAAO,KACNN,EAAAA,cAACM,EAAAA,EAAQC,OAAM,CACb1B,MAAOA,EACPC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,EACNwB,UAAWC,KAAKC,MAAMtB,EAAYuB,WAEnCpB,EAAeqB,OAAS,GACvBZ,EAAAA,cAACM,EAAAA,EAAQO,OAAM,CAACC,OAAQ7B,EAAQA,OAAQM,IAE1CS,EAAAA,cAACM,EAAAA,EAAQS,KAAI,CAACC,KAAMxC,EAAKwC,OACzBhB,EAAAA,cAACM,EAAAA,EAAQW,OAAM,CAACvC,SAAUA,EAAUC,KAAMA,KAErC,C","sources":["webpack://gatsby-starter-hoodie/./src/templates/Post.jsx"],"sourcesContent":["import React from \"react\"\r\nimport SEO from \"components/SEO\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"components/Layout\"\r\nimport Article from \"components/Article\"\r\n\r\nimport { siteUrl } from \"../../blog-config\"\r\n\r\nconst Post = ({ data }) => {\r\n  const post = data.markdownRemark\r\n  const { previous, next, seriesList } = data\r\n\r\n  const { title, date, update, tags, series } = post.frontmatter\r\n  const { excerpt } = post\r\n  const { readingTime, slug } = post.fields\r\n\r\n  let filteredSeries = []\r\n  if (series !== null) {\r\n    filteredSeries = seriesList.edges.map(seriesPost => {\r\n      if (seriesPost.node.id === post.id) {\r\n        return {\r\n          ...seriesPost.node,\r\n          currentPost: true,\r\n        }\r\n      } else {\r\n        return {\r\n          ...seriesPost.node,\r\n          currentPost: false,\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} description={excerpt} url={`${siteUrl}${slug}`} />\r\n      <Article>\r\n        <Article.Header\r\n          title={title}\r\n          date={date}\r\n          update={update}\r\n          tags={tags}\r\n          minToRead={Math.round(readingTime.minutes)}\r\n        />\r\n        {filteredSeries.length > 0 && (\r\n          <Article.Series header={series} series={filteredSeries} />\r\n        )}\r\n        <Article.Body html={post.html} />\r\n        <Article.Footer previous={previous} next={next} />\r\n      </Article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $series: String\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 200, truncate: true)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        update(formatString: \"MMMM DD, YYYY\")\r\n        tags\r\n        series\r\n      }\r\n      fields {\r\n        slug\r\n        readingTime {\r\n          minutes\r\n        }\r\n      }\r\n    }\r\n    seriesList: allMarkdownRemark(\r\n      sort: { order: ASC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { series: { eq: $series } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","data","post","markdownRemark","previous","next","seriesList","title","date","update","tags","series","frontmatter","excerpt","readingTime","slug","fields","filteredSeries","edges","map","seriesPost","node","id","Object","assign","currentPost","React","Layout","SEO","description","url","siteUrl","Article","Header","minToRead","Math","round","minutes","length","Series","header","Body","html","Footer"],"sourceRoot":""}