{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"Github 레포지토리 생성 giscus 설정까지 완료했다면 드디어 블로그를 배포해볼 차례입니다. 깃허브에서 위의 이름 형식으로 레포지토리를 생성해줍니다.  이후 터미널로 돌아와 위의 명령어를 입력하고 빌드가 완료될 때까지 잠시 기다렸다가 브라우저에서 위 형식의 경로로 접속하면 Gatby 테마로 만든 블로그가 배포되는 것을 확인할 수 있습니다. 우여곡절도…","fields":{"slug":"/gatsby-blog-3/"},"frontmatter":{"date":"January 07, 2025","title":"Gatsby 테마를 적용한 Github 블로그 만들기 (3)_Github Pages 로 배포하기","tags":["Gatsby","Node.js"]},"rawMarkdownBody":"\r\n## Github 레포지토리 생성\r\n\r\ngiscus 설정까지 완료했다면 드디어 블로그를 배포해볼 차례입니다.\r\n\r\n```\r\n[사용자이름].github.io\r\n```\r\n깃허브에서 위의 이름 형식으로 레포지토리를 생성해줍니다. \r\n\r\n```\r\nnpm run deploy-gh\r\n```\r\n이후 터미널로 돌아와 위의 명령어를 입력하고 빌드가 완료될 때까지 잠시 기다렸다가\r\n\r\n```\r\nhttps://[사용자이름].github.io\r\n\r\n```\r\n브라우저에서 위 형식의 경로로 접속하면 Gatby 테마로 만든 블로그가 배포되는 것을 확인할 수 있습니다.\r\n\r\n우여곡절도 많았지만 어쨌든 이런 과정을 통해 Gatsby 테마를 사용한 Github 블로그를 배포할 수 있었습니다. 고생해서 만든 만큼 열심히 운영해보도록 하겠습니다. \r\n\r\n다음 포스팅은 블로그 글 작성방법, 마크다운 문법 등을 소개해보도록 하겠습니다."},{"excerpt":"blog-config.js 작성 gatsby-starter-hoodie 는  라는 설정 파일을 제공합니다. 먼저 giscus 설정을 제외한 위쪽 설정을 사용자의 정보로 바꿔주시면 됩니다. 이후 giscus 라는 Git Disscuss 를 기반으로한 댓글 위젯을 설정해주어야 합니다.  giscus 란?   Git Disscuss 를 기반으로 개발된 댓글 위…","fields":{"slug":"/gatsby-blog-2/"},"frontmatter":{"date":"January 06, 2025","title":"Gatsby 테마를 적용한 Github 블로그 만들기 (2)_초기 설정","tags":["Gatsby","Node.js"]},"rawMarkdownBody":"## blog-config.js 작성\r\n\r\n```\r\nmodule.exports = {\r\n  title: \"MY BLOG\",\r\n  description: \"Hello, This is my blog\",\r\n  author: \"YOUR NAME\",\r\n  siteUrl: \"https://myblog.com\",\r\n  links: {\r\n    github: \"https://github.com\",\r\n    facebook: \"https://www.facebook.com\",\r\n    instagram: \"https://www.instagram.com\",\r\n    etc: \"https://www.google.com/\",\r\n  },\r\n  giscus: {\r\n    repo: \"{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}\",\r\n    repoId: \"{YOUR_GITHUB_REPOSITORY_ID}\",\r\n    category: \"{YOUR_GITHUB_REPOSITORY_CATEGORY}\",\r\n    categoryId: \"{YOUR_GITHUB_REPOSITORY_CATEGORY_ID}\",\r\n    mapping: \"pathname\",\r\n    strict: \"0\",\r\n    reactionsEnabled: \"1\",\r\n    inputPosition: \"bottom\",\r\n    lang: \"en\",\r\n  },\r\n}\r\n```\r\ngatsby-starter-hoodie 는 `blog-config.js` 라는 설정 파일을 제공합니다. 먼저 giscus 설정을 제외한 위쪽 설정을 사용자의 정보로 바꿔주시면 됩니다. 이후 giscus 라는 Git Disscuss 를 기반으로한 댓글 위젯을 설정해주어야 합니다.  \r\n<br>\r\n>giscus 란?  \r\n\r\nGit Disscuss 를 기반으로 개발된 댓글 위젯 기능  \r\n\r\n<br>\r\n\r\n![](image-1.png)\r\n[giscus 설정 페이지](https://giscus.app/ko)에 들어가서 레포지토리를 조건에 맞게 설정합니다.\r\n  \r\n<br>\r\n\r\n![](image.png)\r\nDiscussion 제목이 페이지`경로`를 포함 을 선택합니다.\r\n\r\n<br>\r\n\r\n![](image-2.png)\r\nAnnouncements 유형을 선택합니다.\r\n\r\n<br>\r\n\r\n![](image-3.png)\r\n이후 생성되는 스크립트에서 \r\n\r\n<br>\r\n\r\n![](image-4.png)\r\n\r\n해당 부분에 있는 repo-id, category, catrgory-id 를 `blog-config.js` 에 작성해주시면 됩니다."},{"excerpt":"Gatsby 블로그를 선택한 이유 Naver 나 Velog 등 블로그 사이트들은 많지만 굳이굳이 Github 블로그가 하고 싶었던 이유는   마크다운으로 작성 가능 vs code 로 미리보기를 보면서 글 작성 가능 포스팅할 때마다 잔디가 심어짐! 대충 이정도 이유가 되겠다.  Github 블로그에도 여러 종류가 있는데 대표적으로       Jekyll 기…","fields":{"slug":"/gatsby-blog-1/"},"frontmatter":{"date":"January 05, 2025","title":"Gatsby 테마를 적용한 Github 블로그 만들기 (1)_로컬에서 실행하기","tags":["Gatsby","Node.js"]},"rawMarkdownBody":"\r\n\r\n## Gatsby 블로그를 선택한 이유  \r\n\r\nNaver 나 Velog 등 블로그 사이트들은 많지만 굳이굳이 Github 블로그가 하고 싶었던 이유는  \r\n  \r\n  1. 마크다운으로 작성 가능\r\n  2. vs code 로 미리보기를 보면서 글 작성 가능\r\n  3. 포스팅할 때마다 잔디가 심어짐!\r\n\r\n대충 이정도 이유가 되겠다.  \r\n<br>\r\n\r\nGithub 블로그에도 여러 종류가 있는데 대표적으로  \r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;Jekyll 기반  \r\n&nbsp;&nbsp;&nbsp;&nbsp;Gatsby 기반\r\n\r\n사실 정보 인프라나 테마 다양성은 Jeykll 이 더 좋습니다.  \r\n<br>\r\n\r\n널리고 널린 Jekyll 기반 Github 블로그가 아니라 Gatsby 를 선택한 이유는 마음에 쏙 드는 테마가 하필이면 Gatsby 기반 테마였기 때문입니다...  \r\n\r\n그리고 이 선택 때문에 오늘 하루를 통째로 날려먹었습니다. (비유가 아니라 진짜 아침부터 점심먹고 저녁까지 개고생함)\r\n\r\n중간에 그냥 벨로그로 갈까 고민도 했는데 너무 예쁘고 필요한 기능으로 가득차있어서 포기할 수가 없었습니다...\r\n\r\n혹시나 제가 블로그를 꾸준히 운영해서 누군가 이 글을 보게 된다면 저처럼 고생하지 말고 편하게 개설하셨으면 좋겠습니다.\r\n\r\n### Getsby 테마 설치하기\r\nGatsby 테마를 사용하기 위해서는 Node.js 와 gatsby-cli 가 설치되어 있어야합니다.\r\n\r\n#### [Node.js 다운로드](https://nodejs.org/en/download/current)\r\n![](image.png)\r\nLTS 버전을 선택하고 하단의 Windows Installer (.msi) 를 다운로드 받아서 설치해주시면 됩니다.\r\n\r\n### gatsby-cli 설치\r\n설치를 원하는 디렉토리로 이동 후 다음 명령어를 입력해줍니다.\r\n```\r\nnpm install -g gatsby-cli\r\n```  \r\n\r\n### 원하는 Gatsby 테마 설치\r\n![사용한 테마](hoodie_theme.png)  \r\n\r\n저는 [gatsby-starter-hoodie](https://github.com/devHudi/gatsby-starter-hoodie) 라는 테마를 사용했습니다.  \r\n\r\n고른 테마를 로컬에 설치하기 위해 아래의 코드를 입력해줍니다.\r\n```\r\nnpx gatsby new [만들 사이트] [소스코드 주소]\r\n```\r\n\r\n제가 선택한 테마의 경우\r\n```\r\nnpx gatsby new my-hoodie-blog https://github.com/devHudi/gatsby-starter-hoodie\r\n```\r\n이런식으로 로컬에 npm 을 이용해 다운받아주시면 됩니다.\r\n\r\n### Gatsby 블로그 로컬에서 실행하기\r\n\r\n테마 다운로드가 끝났다면 일단 설치한 폴더로 이동해준후\r\n```\r\ncd [폴더 이름]\r\n```\r\n밑의 명령어를 이용해 로컬에서 Getsby 를 실행할 수 있습니다.\r\n\r\n```\r\nnpm run start\r\n```\r\n이후 브라우저에서 https://localhost:8000 으로 접속하면 로컬에서 실행된 블로그를 확인하실 수 있습니다.  \r\n\r\n다음 포스팅에서는 Github Page 를 이용해 블로그 배포를 진행해보도록 하겠습니다.  \r\n\r\n<br>\r\n\r\n>주의!!  \r\n\r\n현재 gatsby-starter-hoodie 테마에 의존성 충돌 이슈가 있습니다.  \r\n\r\n`npm run start` 이후  \r\n\r\n`Error: Cannot find module 'ajv/dist/compile/codegen'` 해당 오류가 발생한다면  \r\n\r\n`npm install --save-dev ajv@^8 --legacy-peer-deps` 으로 의존성 설치 후  \r\n\r\n`npm run start` 를 진행해보세요  \r\n\r\n[관련 이슈](https://github.com/devHudi/gatsby-starter-hoodie/issues/181)  "},{"excerpt":"gatsby-starter-hoodie 에 대하여 gatsby-starter-hoodie 는 기술 블로그를 작성하기 위해 개발된 Gatsby 테마입니다. 마크다운과 많은 프로그래밍 언어의 코드 하이라이팅, 그리고 Katex 문법을 지원합니다. 또한 태그와 시리즈를 통하여 쉽게 게시물을 분류할 수 있습니다. 다크모드를 지원하는 깔끔한 디자인의 gatsby-…","fields":{"slug":"/about-hoodie-kr/"},"frontmatter":{"date":"April 04, 2021","title":"🎇 1. gatsby-starter-hoodie 에 대하여","tags":["hoodie","about"]},"rawMarkdownBody":"\r\n## gatsby-starter-hoodie 에 대하여\r\n\r\ngatsby-starter-hoodie 는 기술 블로그를 작성하기 위해 개발된 Gatsby 테마입니다. 마크다운과 많은 프로그래밍 언어의 코드 하이라이팅, 그리고 Katex 문법을 지원합니다. 또한 태그와 시리즈를 통하여 쉽게 게시물을 분류할 수 있습니다.\r\n\r\n다크모드를 지원하는 깔끔한 디자인의 gatsby-starter-hoodie 로 여러분의 블로그를 시작하세요.\r\n\r\n## 주요 기능\r\n\r\n- 마크다운\r\n- 코드 하이라이팅\r\n- Katex 문법\r\n- 다크모드 (OS 환경설정과 연동)\r\n- 태그 분류\r\n- 시리즈 분류\r\n- 반응형 웹\r\n- SEO\r\n- Giscus\r\n\r\n## 시작\r\n\r\n[빠르게 시작하기](/quick-start-kr) 문서에서 블로그를 세팅하세요.\r\n"},{"excerpt":"아래 단계를 따라서 여러분의 블로그를 시작하세요. 굉장히 쉬워요 😉. 1. Gatsby 사이트 생성 컴퓨터에 node.js 와 gatsby-cli 가 설치되어 있어야합니다. 2. 개발 서버 시작 이제 localhost:8000 으로 여러분의 블로그를 접속할 수 있습니다. 3. Github 레포지토리 생성 Giscus 댓글 위젯은 Github Discuss…","fields":{"slug":"/quick-start-kr/"},"frontmatter":{"date":"April 03, 2021","title":"🚀 2. 빠르게 시작하기","tags":["hoodie","quick-start"]},"rawMarkdownBody":"\r\n아래 단계를 따라서 여러분의 블로그를 시작하세요. 굉장히 쉬워요 😉.\r\n\r\n## 1. Gatsby 사이트 생성\r\n\r\n> 컴퓨터에 **node.js** 와 **gatsby-cli** 가 설치되어 있어야합니다.\r\n\r\n```\r\n$ npx gatsby new my-hoodie-blog https://github.com/devHudi/gatsby-starter-hoodie\r\n```\r\n\r\n## 2. 개발 서버 시작\r\n\r\n```\r\n$ cd my-hoodie-blog\r\n$ npm run start\r\n```\r\n\r\n이제 localhost:8000 으로 여러분의 블로그를 접속할 수 있습니다.\r\n\r\n## 3. Github 레포지토리 생성\r\n\r\nGiscus 댓글 위젯은 **Github Discuss 시스템** 기반입니다. 따라서 각 블로그 별 Github 레포지토리가 필요합니다. 또한 여러분이 Github Pages 혹은 Netlify 로 블로그를 배포하길 원한다면, Github 레포지토리는 필수입니다.\r\n\r\n만약 Github 레포지토리를 생성하는 법을 모른다면, [Github 공식 문서](https://docs.github.com/en/github/getting-started-with-github/create-a-repo) 를 참조하세요.\r\n\r\n### 원격 레포지토리 등록\r\n\r\n```\r\ngit remote add origin https://github.com/{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}\r\n```\r\n\r\n## 4. blog-config.js 작성\r\n\r\n```javascript\r\nmodule.exports = {\r\n  title: \"MY BLOG\",\r\n  description: \"Hello, This is my blog\",\r\n  author: \"YOUR NAME\",\r\n  siteUrl: \"https://myblog.com\",\r\n  links: {\r\n    github: \"https://github.com\",\r\n    facebook: \"https://www.facebook.com\",\r\n    instagram: \"https://www.instagram.com\",\r\n    etc: \"https://www.google.com/\",\r\n  },\r\n  giscus: {\r\n    repo: \"{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}\",\r\n    repoId: \"{YOUR_GITHUB_REPOSITORY_ID}\",\r\n    category: \"{YOUR_GITHUB_REPOSITORY_CATEGORY}\",\r\n    categoryId: \"{YOUR_GITHUB_REPOSITORY_CATEGORY_ID}\",\r\n    mapping: \"pathname\",\r\n    strict: \"0\",\r\n    reactionsEnabled: \"1\",\r\n    inputPosition: \"bottom\",\r\n    lang: \"en\",\r\n  },\r\n}\r\n```\r\n\r\ngatsby-starter-hoodie 는 `blog-config.js` 라는 설정 파일을 제공합니다. 이 파일에서 블로그 정보, 작성자 프로필, Giscus 설정 등을 작성할 수 있습니다. 여러분 블로그 설정에 맞게 `blog-config.js` 를 설정하세요.\r\n\r\n### 프로필 이미지 변경\r\n\r\n`static/profile.png` 에 위치한 이미지 파일을 원하는 이미지 파일로 교체하세요. 만약 파일명을 변경하고 싶다면, `src/components/Bio.jsx` 의 소스코드를 수정해야합니다.\r\n\r\n## 5. 포스트 추가\r\n\r\n마크다운 포스트는 `contents/posts` 경로에 위치해있습니다. 해당 경로에서 글을 작성할 수 있습니다. [여기를 클릭하여](https://devHudi.github.io/gatsby-starter-hoodie/writing-guide) 더 자세한 글 작성 방법을 확인하세요.\r\n\r\n## 6. 블로그 배포하기\r\n\r\n### 6-1 Netlify 를 통해\r\n\r\n[A Step-by-Step Guide: Gatsby on Netlify](https://www.netlify.com/blog/2016/02/24/a-step-by-step-guide-gatsby-on-netlify/) 문서를 참조하여, Netlify 를 Github 레포지토리와 연결할 수 있습니다. 이 과정은 어렵지 않습니다.\r\n\r\nGithub 레포지토리와 연결이 되었다면, Github 레포지토리에 변경사항이 발생할 때 마다 자동으로 여러분의 블로그에 배포됩니다.\r\n\r\n### 6-2. Github Pages 를 통해\r\n\r\n#### 상황 1\r\n\r\n레포지토리 이름이 `{YOUR_GITHUB_NAME}.github.io` 형태일 경우, 아래 명령어를 실행해주세요.\r\n\r\n```\r\n$ npm run deploy-gh\r\n```\r\n\r\n#### 상황 2\r\n\r\n레포지토리 이름이 `{YOUR_GITHUB_NAME}.github.io` 형태가 아닐 경우, 아래 명령어를 실행해주세요.\r\n\r\n```\r\n$ npm run deploy-gh-prefix-paths\r\n```\r\n\r\n만약 위와 같은 경우 `gatsby-config.js` 에서 `pathPrefix` 를 여러분의 레포지토리 이름으로 바꿔야합니다.\r\n\r\n### 6-3. 다른 플랫폼\r\n\r\n```\r\n$ npm run build\r\n```\r\n\r\n위 명령어로 Gastby 웹사이트를 빌드할 수 있습니다. 빌드 결과물은 `/public` 에 저장됩니다. `/public` 디렉토리를 여러분이 사용하는 플랫폼의 배포 명령을 통해 배포해주세요.\r\n\r\n## 7. 커스터마이징\r\n\r\n### 프로젝트 구조\r\n\r\n아래 프로젝트 구조를 참고하여 커스터마이징 할 수 있습니다 🙊.\r\n\r\n```\r\n├── node_modules\r\n├── contents\r\n│   └── posts // your articles are here\r\n├── public // build outputs are here\r\n└── src\r\n    ├── assets\r\n    │   └── theme // theme config is here\r\n    ├── components\r\n    │   └── Article\r\n    │       └── Body\r\n    │           └── StyledMarkdown\r\n    │               └── index.jsx // markdown styles are here\r\n    │   ...\r\n    ├── fonts // webfonts are here\r\n    ├── hooks\r\n    ├── images\r\n    ├── pages // page components are here\r\n    ├── reducers\r\n    ├── templates // post components are here\r\n    └── utils\r\n```\r\n"},{"excerpt":"1. 포스트 추가하기  경로에 새로운 마크다운 파일을 생성하여 여러분의 글을 추가할 수 있습니다. 1-1. 포스트 파일 구조 새로운 문서를 추가하는 방법에는 두가지가 있습니다. 첫번째는 디렉토리 없이 문서를 생성하는 방법입니다. 만약 여러분이 Javascript 에 관한 문서를 생성한다면,  파일을  디렉토리에 추가할 수 있습니다. 두번째 방법은 먼저 디…","fields":{"slug":"/writing-guide-kr/"},"frontmatter":{"date":"April 02, 2021","title":"🤔 3. 작성 가이드","tags":["hoodie","writing-guide"]},"rawMarkdownBody":"\r\n## 1. 포스트 추가하기\r\n\r\n`contents/post` 경로에 새로운 마크다운 파일을 생성하여 여러분의 글을 추가할 수 있습니다.\r\n\r\n### 1-1. 포스트 파일 구조\r\n\r\n새로운 문서를 추가하는 방법에는 두가지가 있습니다. 첫번째는 디렉토리 없이 문서를 생성하는 방법입니다. 만약 여러분이 Javascript 에 관한 문서를 생성한다면, `about-javascript.md` 파일을 `contents/posts` 디렉토리에 추가할 수 있습니다.\r\n\r\n두번째 방법은 먼저 디렉토리를 생성한 뒤, 디렉토리 안에 `index.md` 파일을 추가하는 것 입니다. 이 방법은 문서 내에 여러 이미지 파일 등 부수적인 파일 여러개가 포함되었을 때 유용합니다.\r\n\r\n첫번째 방법으로 생성한 파일명이나, 두번째 방법으로 생성한 디렉토리 이름은 웹사이트에서 고유의 주소를 갖습니다. `https://siteURL/about-javascript` 와 같이요.\r\n\r\n### 1-2. Frontmatter\r\n\r\n마크다운은 문서의 메타데이터인 Frontmatter 라 불리는 정보를 가지고 있습니다.\r\n\r\n```\r\n---\r\ntitle: \"🤔 3. 작성 가이드\"\r\ndescription: \"어떻게 글을 작성하고 추가할까요?\"\r\ndate: 2021-04-03\r\nupdate: 2021-04-03\r\ntags:\r\n  - hoodie\r\n  - writing-guide\r\nseries: \"gatsby-starter-hoodie 로 블로그 시작하기\"\r\n---\r\n```\r\n\r\n위는 지금 여러분이 읽고 있는 문서의 Frontmatter 입니다. `title` 과 `date` 는 필수 값입니다. 띄어쓰기를 포함된 문자열을 입력할 때에는 따옴표로 감싸는 것을 추천합니다.\r\n\r\n### 1-3. 마크다운 작성하기\r\n\r\n만약 Frontmatter 까지 작성했다면, 여러분은 그 아래에 마크다운 문서를 작성하면 됩니다. gatsby-starter-hoodie 는 대부분의 마크다운 문법을 지원합니다. 마크다운 작성 방법을 알고 싶다면, Github 의 Mastering Markdown[^1] 문서를 참고하세요.\r\n\r\n## 2. 코드 하이라이팅 & Katex\r\n\r\n### 2-1. 코드 하이라이팅\r\n\r\nPrism.JS 에 기반한 코드 하이라이팅이 제공됩니다.\r\n\r\n#### 예시\r\n\r\nJavascript\r\n\r\n```javascript\r\nconsole.log(\"Hello, world!\")\r\n```\r\n\r\nPython\r\n\r\n```python\r\nprint(\"Hello, world!\")\r\n```\r\n\r\n그 외 더 많은 언어를 제공합니다. 제공되는 언어를 확인하고 싶다면, [Prism.js 웹사이트](https://prismjs.com/) 를 참고하세요.\r\n\r\n### 2-2. Katex\r\n\r\nKatex 문법을 지원하여 복잡한 수식도 쉽게 표현할 수 있습니다.\r\n\r\n#### 인라인 모드\r\n\r\n$$E = m c^{2}$$\r\n\r\n#### 블럭 모드\r\n\r\n$$\r\n\\int_{0}^{\\infty} f(x) dx\r\n$$\r\n\r\n## 3. 글에 이미지 추가하기\r\n\r\n상대경로를 이용하여 쉽게 이미지를 추가할 수 있습니다. 디렉토리를 생성하고 그 안에 `index.md` 를 추가하여, 글을 추가하는 방법으로 작성해야 이미지 관리가 쉽습니다.\r\n\r\n![샘플 이미지 캡션](sample-image.jpg)\r\n\r\n이미지는 Lazy Loading 으로 로드되어, 빠른 초기 문서 로딩 속도를 확보할 수 있습니다.\r\n\r\n> ⚠ 이미지의 모든 확장자는 소문자여야합니다.\r\n\r\n## 4. 태그\r\n\r\n![](tag-example.jpg)\r\n\r\nFrontmatter 의 태그를 통해 쉽게 문서를 분류하고 검색할 수 있습니다. 여러분의 모든 태그는 `https://siteUrl/tags` 경로에서 확인하고, 검색할 수 있습니다.\r\n\r\n## 5. 시리즈\r\n\r\n![](series-example.jpg)\r\n\r\n여러분이 연관된 여러개의 문서를 작성할 때 시리즈를 사용할 수 있습니다. Frontmatter 에 작성된 시리즈가 같은 문서끼리 묶여 문서 상단에 리스트로 표시됩니다. 시리즈는 일련의 순서가 있는 문서들을 작성할 때 유용하게 사용할 수 있습니다. 시리즈는 문서의 작성 날짜 순서대로 정렬됩니다.\r\n\r\n현재 문서는 `gatsby-starter-hoodie 로 블로그 시작하기` 라는 시리즈로 설정되어 있습니다.\r\n\r\n[^1]: https://guides.github.com/features/mastering-markdown/\r\n"},{"excerpt":"파비콘은 어떻게 변경하나요?  에 파비콘 파일이 위치해 있습니다. 이미지 파일을 대체하면 파비콘을 변경할 수 있습니다. 만약 파비콘 파일의 이름을 변경하고 싶다면,  파일의  에서  속성을 변경하셔야합니다. OG Image 를 설정하고 싶어요.  디렉토리의  파일을 여러분이 원하는 이미지 파일로 대체하세요. 다른 질문이 있으신가요? 이 문서에 댓글을 달거…","fields":{"slug":"/other-tips-kr/"},"frontmatter":{"date":"April 01, 2021","title":"🤩 4. 그 외 팁들","tags":["hoodie","other-tips"]},"rawMarkdownBody":"\r\n## 파비콘은 어떻게 변경하나요?\r\n\r\n`static/favicon.png` 에 파비콘 파일이 위치해 있습니다. 이미지 파일을 대체하면 파비콘을 변경할 수 있습니다.\r\n\r\n만약 파비콘 파일의 이름을 변경하고 싶다면, `gatsby-config.js` 파일의 `gatsby-plugin-manifest` 에서 `icon` 속성을 변경하셔야합니다.\r\n\r\n## OG Image 를 설정하고 싶어요.\r\n\r\n`/static` 디렉토리의 `og-image.png` 파일을 여러분이 원하는 이미지 파일로 대체하세요.\r\n\r\n## 다른 질문이 있으신가요?\r\n\r\n이 문서에 댓글을 달거나 gatsby-starter-hoodie 레포지토리에 [이슈를 열어주세요](https://github.com/devHudi/gatsby-starter-hoodie/issues). 여러분의 참여가 gatsby-starter-hoodie 를 더욱 발전시킵니다. 감사해요 😎.\r\n"}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}